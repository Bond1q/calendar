{"version":3,"file":"main.js","mappings":"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","sources":["webpack://calendar/./apps/server/src/app/absence/absence.controller.ts","webpack://calendar/./apps/server/src/app/absence/absence.model.ts","webpack://calendar/./apps/server/src/app/absence/absence.module.ts","webpack://calendar/./apps/server/src/app/absence/absence.service.ts","webpack://calendar/./apps/server/src/app/absence/dto/create-absence.dto.ts","webpack://calendar/./apps/server/src/app/absence/dto/update-absence.dto.ts","webpack://calendar/./apps/server/src/app/app.module.ts","webpack://calendar/./libs/shared/types/src/index.ts","webpack://calendar/./libs/shared/types/src/lib/shared-types.ts","webpack://calendar/./libs/shared/types/src/lib/types.ts","webpack://calendar/external commonjs \"@nestjs/common\"","webpack://calendar/external commonjs \"@nestjs/config\"","webpack://calendar/external commonjs \"@nestjs/core\"","webpack://calendar/external commonjs \"@nestjs/typeorm\"","webpack://calendar/external commonjs \"class-validator\"","webpack://calendar/external commonjs \"moment\"","webpack://calendar/external commonjs \"tslib\"","webpack://calendar/external commonjs \"typeorm\"","webpack://calendar/webpack/bootstrap","webpack://calendar/./apps/server/src/main.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, ParseUUIDPipe, Post, Put, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AbsenceService } from './absence.service';\nimport { CreateAbsenceDto } from './dto/create-absence.dto';\nimport { UpdateAbsenceDto } from './dto/update-absence.dto';\n\n@Controller('absence')\nexport class AbsenceController {\n\tconstructor(private absenceService: AbsenceService) { }\n\n\t@Get()\n\tgetAllAbsence() {\n\t\treturn this.absenceService.getAllAbsence();\n\t}\n\n\t@Post()\n\t@UsePipes(ValidationPipe)\n\tcreateAbsence(@Body() absence: CreateAbsenceDto) {\n\t\treturn this.absenceService.createAbsence(absence);\n\t}\n\n\t@Put(':id')\n\t@UsePipes(ValidationPipe)\n\tupdateAbsence(@Param('id', ParseUUIDPipe) id: string, @Body() absence: UpdateAbsenceDto) {\n\t\treturn this.absenceService.updateAbsence(id, absence);\n\t}\n\n\t@Delete(':id')\n\t@UsePipes(ValidationPipe)\n\tdeleteAbsence(@Param('id', ParseUUIDPipe) id: string) {\n\t\treturn this.absenceService.deleteAbsence(id);\n\t}\n}\n","import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { AbsenceTypes, Absence as IAbsence } from 'shared/types';\n\n@Entity()\nexport class Absence implements IAbsence {\n\t@Column({ type: 'enum', enum: AbsenceTypes })\n\ttype: AbsenceTypes;\n\n\t@Column()\n\tdateStart: Date;\n\n\t@Column()\n\tdateEnd: Date;\n\n\t@Column()\n\tcomment: string;\n\n\t@PrimaryGeneratedColumn(\"uuid\")\n\tid: string;\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AbsenceController } from './absence.controller';\nimport { Absence } from './absence.model';\nimport { AbsenceService } from './absence.service';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([Absence])],\n\tcontrollers: [AbsenceController],\n\tproviders: [AbsenceService],\n})\nexport class AbsenceModule { }\n","import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Between, Not, Repository } from 'typeorm';\nimport { Absence } from './absence.model';\nimport { AbsenceTypes } from 'shared/types';\nimport * as moment from 'moment';\nimport { CreateAbsenceDto } from './dto/create-absence.dto';\nimport { UpdateAbsenceDto } from './dto/update-absence.dto';\n@Injectable()\nexport class AbsenceService {\n\tconstructor(\n\t\t@InjectRepository(Absence)\n\t\tprivate absenceRepository: Repository<Absence>,\n\t) { }\n\n\tasync getAllAbsence(): Promise<Absence[]> {\n\t\treturn this.absenceRepository.find();\n\t}\n\n\tasync createAbsence(absence: CreateAbsenceDto) {\n\t\tif (absence.type !== AbsenceTypes.SICK && moment(absence.dateStart).isBefore(moment(), 'day')) {\n\t\t\tthrow new HttpException(\n\t\t\t\t`Cannot create absence with type: ${absence.type} in the past`,\n\t\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\t);\n\t\t}\n\t\tconst findedAbsences = await this.absenceRepository.find({\n\t\t\twhere: {\n\t\t\t\tdateStart: Between(moment(absence.dateStart).toDate(), moment(absence.dateEnd).toDate()),\n\t\t\t\tdateEnd: Between(moment(absence.dateStart).toDate(), moment(absence.dateEnd).toDate()),\n\t\t\t},\n\t\t});\n\t\tif (findedAbsences.length === 0) {\n\t\t\tconst result = await this.absenceRepository.insert(absence);\n\t\t\treturn this.absenceRepository.findOneBy({ id: result.raw[0].id });\n\t\t}\n\t\tthrow new HttpException('There is absence in this period in database', HttpStatus.BAD_REQUEST);\n\t}\n\n\tasync updateAbsence(id: string, absence: UpdateAbsenceDto) {\n\t\tconst findedAbsences = await this.absenceRepository.find({\n\t\t\twhere: {\n\t\t\t\tdateStart: Between(moment(absence.dateStart).toDate(), moment(absence.dateEnd).toDate()),\n\t\t\t\tdateEnd: Between(moment(absence.dateStart).toDate(), moment(absence.dateEnd).toDate()),\n\t\t\t\tid: Not(id),\n\t\t\t},\n\t\t});\n\n\t\tif (findedAbsences.length !== 0) {\n\t\t\tthrow new HttpException('There is absence in this period in database', HttpStatus.BAD_REQUEST);\n\t\t}\n\n\t\tconst result = await this.absenceRepository.update(id, absence);\n\n\t\tif (result.affected) return this.absenceRepository.findOneBy({ id: id });\n\t\tthrow new HttpException('There is not such id in database', HttpStatus.BAD_REQUEST);\n\t}\n\n\tasync deleteAbsence(id: string) {\n\t\tconst res = await this.absenceRepository.delete(id);\n\t\tif (res.affected) return this.absenceRepository.findOneBy({ id: id });\n\t\tthrow new HttpException('There is not such id in database', HttpStatus.BAD_REQUEST);\n\t}\n}\n","import { IsDateString, IsEnum, IsString, MaxLength, MinLength } from \"class-validator\";\nimport { AbsenceTypes, Absence as IAbsence } from 'shared/types';\n\nexport class CreateAbsenceDto implements Omit<IAbsence, 'id'> {\n\t@IsEnum(AbsenceTypes, { message: \"Incorrect absence type\" })\n\treadonly type: AbsenceTypes;\n\n\t@IsDateString()\n\treadonly dateStart: Date;\n\n\t@IsDateString()\n\treadonly dateEnd: Date;\n\n\t@IsString()\n\t@MinLength(1)\n\t@MaxLength(200)\n\treadonly comment: string;\n}","import { IsDateString } from \"class-validator\";\nimport { Absence as IAbsence } from 'shared/types';\n\nexport class UpdateAbsenceDto implements Pick<IAbsence, 'dateStart' | 'dateEnd'> {\n\t@IsDateString()\n\treadonly dateStart: Date;\n\n\t@IsDateString()\n\treadonly dateEnd: Date;\n\n}","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AbsenceModule } from './absence/absence.module';\nimport { Absence } from './absence/absence.model';\n\n@Module({\n\timports: [\n\t\tConfigModule.forRoot({\n\t\t\tenvFilePath: '.env'\n\t\t}),\n\t\tTypeOrmModule.forRoot({\n\t\t\ttype: 'postgres',\n\t\t\thost: process.env['POSTGRES_HOST'],\n\t\t\tport: Number(process.env['POSTGRES_PORT']),\n\t\t\tusername: process.env['POSTGRES_USER'],\n\t\t\tpassword: process.env['POSTGRES_PASSWORD'],\n\t\t\tdatabase: process.env['POSTGRES_DB'],\n\t\t\tentities: [Absence],\n\t\t\tsynchronize: true,\n\t\t}),\n\t\tAbsenceModule,\n\t],\n\tcontrollers: [],\n\tproviders: [],\n})\nexport class AppModule { }\n","export * from './lib/shared-types';\nexport * from './lib/types'","export function sharedTypes(): string {\n  return 'shared-types';\n}\n","export enum AbsenceTypes {\n\tSICK = 'sick',\n\tVACATION = 'vacation',\n}\n\nexport interface Absence {\n\ttype: AbsenceTypes;\n\tdateStart: Date;\n\tdateEnd: Date;\n\tcomment: string;\n\tid: string;\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-validator\");","module.exports = require(\"moment\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n\tconst app = await NestFactory.create(AppModule, { cors: true });\n\tconst port = process.env['PORT'] || 3333;\n\tapp.setGlobalPrefix('calendar-server.netlify.app')\n\tawait app.listen(port);\n\tLogger.log(\n\t\t`🚀 Application is running on: http://localhost:${port}`\n\t);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}